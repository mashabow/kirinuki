{"version":3,"sources":["components/Canvas.module.css","components/App.module.css","features/crops.ts","features/sourceImage.ts","redux.ts","components/Sidebar.tsx","components/Canvas.tsx","components/Dropzone.tsx","components/App.tsx","hooks.ts","index.tsx","components/Sidebar.module.css","components/Dropzone.module.css"],"names":["module","exports","slice","createSlice","name","initialState","reducers","addCrop","state","action","push","payload","actions","url","angle","setURL","setAngle","rootReducer","combineReducers","crops","sourceImage","previewClassName","styles","Preview","angleFormatter","toFixed","Sidebar","dispatch","useDispatch","onAngleChange","useCallback","value","useSelector","className","PreviewWrapper","min","max","step","defaultValue","onChange","tipFormatter","tooltipPlacement","JSON","stringify","Canvas","cropperRef","src","undefined","useEffect","current","rotateTo","Cropper","ref","c","preview","dragMode","toggleDragModeOnDblclick","Dropzone","children","hasImage","Boolean","useDropzone","accept","noClick","noKeyboard","onDrop","acceptedFiles","length","blobURL","URL","createObjectURL","getRootProps","getInputProps","Root","Empty","image","type","Icon","description","Content","Layout","Sider","App","useRef","handler","event","a","cropper","key","getData","x","y","width","height","rotate","canvas","getCroppedCanvas","maxWidth","maxHeight","Promise","resolve","toBlob","blob","params","thumbnail","window","addEventListener","removeEventListener","useEnterToCrop","theme","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d5fa4b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cropper\":\"Canvas_Cropper__3Z3Jq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sider\":\"App_Sider__3tFNd\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// 各プロパティの意味は以下の図を参照\n// https://github.com/fengyuanchen/cropperjs/blob/v1.5.6/docs/images/data.jpg\ninterface CropParams {\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  readonly rotate: number;\n}\n\ninterface Crop {\n  readonly params: CropParams;\n  readonly thumbnail: string;\n}\n\nconst initialState: readonly Crop[] = [];\n\nconst slice = createSlice({\n  name: 'crops',\n  initialState,\n  reducers: {\n    addCrop: (state, action: PayloadAction<Crop>) => {\n      state.push(action.payload);\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const { addCrop } = slice.actions;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst initialState: {\n  readonly url: string | null;\n  readonly angle: number;\n} = {\n  url: null,\n  angle: 0,\n};\n\nconst slice = createSlice({\n  name: 'sourceImage',\n  initialState,\n  reducers: {\n    setURL: (state, action: PayloadAction<string>) => {\n      state.url = action.payload;\n    },\n    setAngle: (state, action: PayloadAction<number>) => {\n      state.angle = action.payload;\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const { setURL, setAngle } = slice.actions;\n","import { combineReducers } from 'redux';\n\nimport crops from './features/crops';\nimport sourceImage from './features/sourceImage';\n\nconst rootReducer = combineReducers({\n  crops,\n  sourceImage,\n});\n\nexport default rootReducer;\n\n// useSelector を型付けする\ndeclare module 'react-redux' {\n  interface DefaultRootState extends ReturnType<typeof rootReducer> {}\n}\n","import { Slider } from 'antd';\nimport { SliderValue } from 'antd/lib/slider';\nimport React, { useCallback } from 'react';\n\nimport styles from './Sidebar.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAngle } from '../features/sourceImage';\n\nexport const previewClassName = styles.Preview;\n\nconst angleFormatter = (angle: number) => `${angle.toFixed(1)}°`;\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n  const onAngleChange = useCallback(\n    (value: SliderValue) => {\n      if (typeof value === 'number') {\n        dispatch(setAngle(value));\n      }\n    },\n    [dispatch],\n  );\n\n  const crops = useSelector(state => state.crops);\n\n  return (\n    <>\n      {/* プレビュー領域の高さを固定するためにはラッパーが必要 */}\n      <div className={styles.PreviewWrapper}>\n        <div className={styles.Preview} />\n      </div>\n      <Slider\n        min={-10}\n        max={10}\n        step={0.1}\n        defaultValue={0}\n        onChange={onAngleChange}\n        tipFormatter={angleFormatter}\n        tooltipPlacement=\"bottom\"\n      />\n      {JSON.stringify(crops)}\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\nimport styles from './Canvas.module.css';\n\ninterface Props {\n  readonly cropperRef: React.MutableRefObject<Cropper | null>;\n  readonly previewClassName: string;\n}\n\nconst Canvas = ({ cropperRef, previewClassName }: Props) => {\n  const src = useSelector(state => state.sourceImage.url ?? undefined);\n\n  const dispatch = useDispatch();\n  const angle = useSelector(state => state.sourceImage.angle);\n  useEffect(() => {\n    if (cropperRef.current) {\n      cropperRef.current.rotateTo(angle);\n    }\n  }, [angle, cropperRef, dispatch]);\n\n  return (\n    <Cropper\n      className={styles.Cropper}\n      ref={c => {\n        cropperRef.current = c;\n      }}\n      src={src}\n      // Cropper.js options\n      preview={`.${previewClassName}`}\n      dragMode=\"move\"\n      toggleDragModeOnDblclick={false}\n    />\n  );\n};\n\nexport default Canvas;\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { setURL } from '../features/sourceImage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Empty, Icon } from 'antd';\n\nimport styles from './Dropzone.module.css';\n\ninterface Props {\n  readonly children: React.ReactElement;\n}\n\nconst Dropzone = ({ children }: Props) => {\n  const hasImage = useSelector(state => Boolean(state.sourceImage.url));\n\n  const dispatch = useDispatch();\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: ['image/jpeg', 'image/png'],\n    noClick: hasImage,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length === 0) return;\n      const blobURL = URL.createObjectURL(acceptedFiles[0]);\n      dispatch(setURL(blobURL));\n    },\n  });\n\n  return (\n    <div className={styles.Root} {...getRootProps()}>\n      <input {...getInputProps()} />\n      {hasImage ? (\n        children\n      ) : (\n        <Empty\n          className={styles.Empty}\n          image={<Icon type=\"file-image\" className={styles.Icon} />}\n          description=\"ここをクリック or ドロップして画像を開く\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dropzone;\n","import { Layout } from 'antd';\nimport React, { useRef } from 'react';\nimport Cropper from 'react-cropper';\n\nimport { useEnterToCrop } from '../hooks';\nimport Sidebar, { previewClassName } from './Sidebar';\nimport Canvas from './Canvas';\nimport Dropzone from './Dropzone';\nimport styles from './App.module.css';\n\nconst { Content, Sider } = Layout;\n\nconst App = () => {\n  const cropperRef = useRef<Cropper | null>(null);\n  useEnterToCrop(cropperRef);\n\n  return (\n    <Layout>\n      <Content>\n        <Dropzone>\n          <Canvas cropperRef={cropperRef} previewClassName={previewClassName} />\n        </Dropzone>\n      </Content>\n      <Sider width={300} className={styles.Sider} theme=\"light\">\n        <Sidebar></Sidebar>\n      </Sider>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addCrop } from './features/crops';\n\nexport const useEnterToCrop = (\n  cropperRef: React.MutableRefObject<Cropper | null>,\n): void => {\n  const dispatch = useDispatch();\n  const handler = useCallback(\n    async (event: KeyboardEvent) => {\n      const cropper = cropperRef.current;\n      if (cropper && event.key === 'Enter') {\n        const { x, y, width, height, rotate } = cropper.getData();\n        const canvas = cropper.getCroppedCanvas({\n          width: 100,\n          height: 100,\n          maxWidth: 100,\n          maxHeight: 100,\n        });\n        const blob = await new Promise(resolve => canvas.toBlob(resolve));\n\n        dispatch(\n          addCrop({\n            params: { x, y, width, height, rotate },\n            thumbnail: URL.createObjectURL(blob),\n          }),\n        );\n      }\n    },\n    [cropperRef, dispatch],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handler);\n    return () => window.removeEventListener('keydown', handler);\n  }, [handler]);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport reducer from './redux';\nimport App from './components/App';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nconst store = configureStore({\n  reducer,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PreviewWrapper\":\"Sidebar_PreviewWrapper__3yT_p\",\"Preview\":\"Sidebar_Preview__3edd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Dropzone_Root__oZIIO\",\"Empty\":\"Dropzone_Empty__kL6cb\",\"Icon\":\"Dropzone_Icon__qVqCp\"};"],"sourceRoot":""}