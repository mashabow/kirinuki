{"version":3,"sources":["components/AngleSlider.module.css","components/Canvas.module.css","features/crops.ts","features/sourceImage.ts","redux.ts","components/CropList.tsx","components/AngleSlider.tsx","components/DownloadButton.tsx","utils.ts","components/Sidebar.tsx","components/Canvas.tsx","components/FileName.tsx","components/Dropzone.tsx","components/App.tsx","hooks.ts","index.tsx","components/Sidebar.module.css","components/CropList.module.css","components/Dropzone.module.css","components/FileName.module.css","components/App.module.css"],"names":["module","exports","initialState","slice","createSlice","name","reducers","addCrop","state","action","push","payload","deleteCrop","splice","clearCrops","actions","fileName","url","angle","open","_","close","setAngle","rootReducer","combineReducers","crops","sourceImage","CropList","className","useSelector","dispatch","useDispatch","onDeleteIconClick","useCallback","index","classnames","styles","map","crop","i","key","Crop","Thumbnail","src","thumbnail","alt","DeleteIcon","type","onClick","formatter","toFixed","AngleSlider","hasImage","Boolean","onChange","value","disabled","min","max","step","defaultValue","tipFormatter","tooltipPlacement","DownloadButton","sourceImageFileName","s","json","JSON","stringify","c","params","substr","lastIndexOf","file","blobURL","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","File","length","icon","previewClassName","Preview","Sidebar","PreviewWrapper","Canvas","cropperRef","useEffect","current","rotateTo","Cropper","ref","undefined","autoCropArea","preview","dragMode","toggleDragModeOnDblclick","confirm","Modal","FileName","closeSourceImage","hasCrop","title","content","okType","onOk","okText","cancelText","centered","CloseIcon","Dropzone","useDropzone","accept","noClick","noKeyboard","onDrop","acceptedFiles","getRootProps","getInputProps","Root","Empty","image","Icon","description","Content","Layout","Sider","App","useRef","handler","event","a","cropper","getData","x","y","width","height","rotate","canvas","getCroppedCanvas","Promise","resolve","toBlob","blob","window","addEventListener","removeEventListener","useEnterToCrop","theme","store","configureStore","reducer","ReactDOM","render","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,YAAc,mC,oBCAhCD,EAAOC,QAAU,CAAC,QAAU,0B,+JCgBtBC,EAAgC,GAEhCC,EAAQC,YAAY,CACxBC,KAAM,QACNH,eACAI,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAME,KAAKD,EAAOE,UAEpBC,WAAY,SAACJ,EAAOC,GAClBD,EAAMK,OAAOJ,EAAOE,QAAS,IAE/BG,WAAY,kBAAMZ,MAIPC,IAAf,Q,EACmDA,EAAMY,QAA1CR,E,EAAAA,QAASK,E,EAAAA,WAAYE,E,EAAAA,W,SC1B9BZ,EAAsB,CAC1Bc,SAAU,KACVC,IAAK,KACLC,MAAO,GAGHf,EAAQC,YAAY,CACxBC,KAAM,cACNH,eACAI,SAAU,CACRa,KAAM,SAACC,EAAGX,GAAJ,sBACDA,EAAOE,QADN,CAEJO,MAAOhB,EAAagB,SAEtBG,MAAO,kBAAMnB,GACboB,SAAU,SAACd,EAAOC,GAChBD,EAAMU,MAAQT,EAAOE,YAKZR,IAAf,Q,EACyCA,EAAMY,QAAhCI,E,EAAAA,KAAME,E,EAAAA,MAAOC,E,EAAAA,SCpBbC,EALKC,0BAAgB,CAClCC,QACAC,gB,4ECgCaC,EA3BmB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC7BH,EAAQI,aAAY,SAAArB,GAAK,OAAIA,EAAMiB,SAEnCK,EAAWC,cACXC,EAAoBC,uBACxB,SAACC,GAAD,OAAmB,WACjBJ,EAASlB,EAAWsB,OAEtB,CAACJ,IAGH,OACE,yBAAKF,UAAWO,IAAWP,EAAWQ,IAAOT,WAC1CF,EAAMY,KAAI,SAACC,EAAMC,GAAP,OACT,yBAAKC,IAAKD,EAAGX,UAAWQ,IAAOK,MAC7B,yBAAKb,UAAWQ,IAAOM,UAAWC,IAAKL,EAAKM,UAAWC,IAAI,KAC3D,kBAAC,IAAD,CACEjB,UAAWQ,IAAOU,WAClBC,KAAK,SACLC,QAAShB,EAAkBO,W,2BCtBjCU,EAAY,SAAC/B,GAAD,gBAAsBA,EAAMgC,QAAQ,GAApC,SA8BHC,EA5Be,WAC5B,IAAMC,EAAWvB,aAAY,SAAArB,GAAK,OAAI6C,QAAQ7C,EAAMkB,YAAYT,QAE1Da,EAAWC,cACXuB,EAAWrB,uBACf,SAACsB,GACsB,kBAAVA,GACTzB,EAASR,EAASiC,MAGtB,CAACzB,IAGH,OACE,kBAAC,IAAD,CACEF,UAAWQ,IAAOe,YAClBK,UAAWJ,EACXK,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,aAAc,EACdN,SAAUA,EACVO,aAAcZ,EACda,iBAAiB,Y,QCFRC,EA1BQ,WACrB,IAAMtC,EAAQI,aAAY,SAAArB,GAAK,OAAIA,EAAMiB,SACnCuC,EAAsBnC,aAAY,SAAArB,GAAK,OAAIA,EAAMkB,YAAYV,YAE7DgC,EAAUf,uBAAY,WAC1B,ICXqBgC,EDWfC,EAAOC,KAAKC,UAChB3C,EAAMY,KAAI,SAAAgC,GAAC,OAAIA,EAAEC,UACjB,KACA,GAEItD,EAAQ,WChBOiD,EDgBQD,GChBgBO,OAAO,EAAGN,EAAEO,YAAY,MDgBvD,UCdM,SAACC,GACvB,IAAMC,EAAUC,IAAIC,gBAAgBH,GAE9BI,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAON,EACZG,EAAKI,SAAWR,EAAKpE,KACrBwE,EAAKK,QAELP,IAAIQ,gBAAgBT,GDOlBO,CAAS,IAAIG,KAAK,CAAClB,GAAOlD,EAAU,CAAE+B,KAAM,wBAC3C,CAACtB,EAAOuC,IAEX,OACE,kBAAC,IAAD,CACER,UAAW/B,EAAM4D,OACjBtC,KAAK,UACLuC,KAAK,WACLtC,QAASA,GAJX,yF,iBEdSuC,EAAmBnD,IAAOoD,QAgBxBC,EAdC,WACd,OACE,yBAAK7D,UAAWQ,IAAOqD,SACrB,kBAAC,EAAD,MAEA,yBAAK7D,UAAWQ,IAAOsD,gBACrB,yBAAK9D,UAAWQ,IAAOoD,WAEzB,kBAAC,EAAD,CAAU5D,UAAWQ,IAAOT,WAC5B,kBAAC,EAAD,Q,6CCqBSgE,EA3BA,SAAC,GAA6C,IAAD,EAA1CC,EAA0C,EAA1CA,WAAYL,EAA8B,EAA9BA,iBACtB7D,EAAcG,aAAY,SAAArB,GAAK,OAAIA,EAAMkB,eAQ/C,OANAmE,qBAAU,WACJD,EAAWE,SACbF,EAAWE,QAAQC,SAASrE,EAAYR,SAEzC,CAAC0E,EAAYlE,EAAYR,QAG1B,oCACE,kBAAC,IAAD,CACEU,UAAWQ,IAAO4D,QAClBC,IAAK,SAAA5B,GACHuB,EAAWE,QAAUzB,GAEvB1B,IAAG,UAAEjB,EAAYT,WAAd,aAAqBiF,EAExBC,aAAc,GACdC,QAAO,WAAMb,GACbc,SAAS,OACTC,0BAA0B,M,2BCxB1BC,GAAYC,IAAZD,QAsCOE,GApCE,WACf,IAAM3E,EAAWC,cACXL,EAAcG,aAAY,SAAArB,GAAK,OAAIA,EAAMkB,eAEzCgF,EAAmBzE,uBAAY,WAC9BP,EAAYT,MACjB0D,IAAIQ,gBAAgBzD,EAAYT,KAChCa,EAAST,KACTS,EAAShB,QACR,CAACgB,EAAUJ,EAAYT,MAEpB0F,EAAU9E,aAAY,SAAArB,GAAK,OAAIA,EAAMiB,MAAM4D,OAAS,KACpDrC,EAAUf,uBACd,kBACE0E,EACIJ,GAAQ,CACNK,MAAO,6FACPC,QAAS,6FACTC,OAAQ,SACRC,KAAML,EACNM,OAAQ,KACRC,WAAY,iCACZC,UAAU,IAEZR,MACN,CAACA,EAAkBC,IAGrB,OACE,yBAAK/E,UAAWQ,KAAOqE,SAAUzD,QAASA,GACvCtB,EAAYV,SACb,kBAAC,IAAD,CAAMY,UAAWQ,KAAO+E,UAAWpE,KAAK,mB,uCCN/BqE,GA5BE,WACf,IAAMhE,EAAWvB,aAAY,SAAArB,GAAK,OAAI6C,QAAQ7C,EAAMkB,YAAYT,QAE1Da,EAAWC,cAHI,EAImBsF,aAAY,CAClDC,OAAQ,CAAC,aAAc,aACvBC,QAASnE,EACToE,YAAY,EACZC,OAAQ,SAAAC,GACN,IAAMjD,EAAOiD,EAAc,GAC3B,GAAKA,EAAL,CACA,IAAMhD,EAAUC,IAAIC,gBAAgBH,GACpC3C,EAASX,EAAK,CAAEH,SAAUyD,EAAKpE,KAAMY,IAAKyD,SARtCiD,EAJa,EAIbA,aAAcC,EAJD,EAICA,cAYtB,OACE,uCAAKhG,UAAWQ,KAAOyF,MAAUF,KAC/B,0BAAWC,KACX,kBAAC,KAAD,CACEhG,UAAWQ,KAAO0F,MAClBC,MAAO,kBAAC,IAAD,CAAMhF,KAAK,aAAanB,UAAWQ,KAAO4F,OACjDC,YAAY,uH,oBClBZC,GAAmBC,IAAnBD,QAASE,GAAUD,IAAVC,MA8BFC,GA5BH,WACV,IAAMzC,EAAa0C,iBAAuB,OCVd,SAC5B1C,GAEA,IAAM9D,EAAWC,cACXwG,EAAUtG,sBAAW,uCACzB,WAAOuG,GAAP,+BAAAC,EAAA,2DACQC,EAAU9C,EAAWE,UACE,UAAd0C,EAAMhG,IAFvB,yBAG4CkG,EAAQC,UAAxCC,EAHZ,EAGYA,EAAGC,EAHf,EAGeA,EAAGC,EAHlB,EAGkBA,MAAOC,EAHzB,EAGyBA,OAAQC,EAHjC,EAGiCA,OACvBC,EAASP,EAAQQ,iBAAiB,CAEtCJ,MAAO,IACPC,OAAQ,MAPd,SASuB,IAAII,SAAQ,SAAAC,GAAO,OACpCH,EAAOI,OAAOD,EAAS,aAAc,OAV3C,OASUE,EATV,OAYIxH,EACEvB,EAAQ,CACN+D,OAAQ,CAAEsE,IAAGC,IAAGC,QAAOC,SAAQC,UAC/BpG,UAAW+B,IAAIC,gBAAgB0E,MAfvC,2CADyB,sDAqBzB,CAAC1D,EAAY9D,IAGf+D,qBAAU,WAER,OADA0D,OAAOC,iBAAiB,UAAWjB,GAC5B,kBAAMgB,OAAOE,oBAAoB,UAAWlB,MAClD,CAACA,IDpBJmB,CAAe9D,GAEf,IAAMxC,EAAWvB,aAAY,SAAArB,GAAK,OAAI6C,QAAQ7C,EAAMkB,YAAYT,QAEhE,OACE,kBAAC,IAAD,KACE,kBAACiH,GAAD,CAAStG,UAAWQ,KAAO8F,SACxB9E,EACC,oCACE,kBAAC,EAAD,CACEwC,WAAYA,EACZL,iBAAkBA,IAEpB,kBAAC,GAAD,OAGF,kBAAC,GAAD,OAGJ,kBAAC6C,GAAD,CAAOU,MAAO,IAAKlH,UAAWQ,KAAOgG,MAAOuB,MAAM,SAChD,kBAAC,EAAD,SE1BFC,I,cAAQC,YAAe,CAC3BC,aAGFC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,OAEF9E,SAASmF,eAAe,U,mBCjB1BjK,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,QAAU,yBAAyB,SAAW,4B,mBCApJD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,uBAAuB,UAAY,4BAA4B,WAAa,+B,mBCA3ID,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,KAAO,yB,mBCAvFD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,8B,mBCApED,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,sB","file":"static/js/main.19f5d928.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AngleSlider\":\"AngleSlider_AngleSlider__2SJUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cropper\":\"Canvas_Cropper__3Z3Jq\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// 各プロパティの意味は以下の図を参照\n// https://github.com/fengyuanchen/cropperjs/blob/v1.5.6/docs/images/data.jpg\ninterface CropParams {\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  readonly rotate: number;\n}\n\ninterface Crop {\n  readonly params: CropParams;\n  readonly thumbnail: string;\n}\n\nconst initialState: readonly Crop[] = [];\n\nconst slice = createSlice({\n  name: 'crops',\n  initialState,\n  reducers: {\n    addCrop: (state, action: PayloadAction<Crop>) => {\n      state.push(action.payload);\n    },\n    deleteCrop: (state, action: PayloadAction<number>) => {\n      state.splice(action.payload, 1);\n    },\n    clearCrops: () => initialState,\n  },\n});\n\nexport default slice.reducer;\nexport const { addCrop, deleteCrop, clearCrops } = slice.actions;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface State {\n  readonly fileName: string | null;\n  readonly url: string | null;\n  readonly angle: number;\n}\n\nconst initialState: State = {\n  fileName: null,\n  url: null,\n  angle: 0,\n};\n\nconst slice = createSlice({\n  name: 'sourceImage',\n  initialState,\n  reducers: {\n    open: (_, action: PayloadAction<Pick<State, 'fileName' | 'url'>>) => ({\n      ...action.payload,\n      angle: initialState.angle,\n    }),\n    close: () => initialState,\n    setAngle: (state, action: PayloadAction<number>) => {\n      state.angle = action.payload;\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const { open, close, setAngle } = slice.actions;\n","import { combineReducers } from 'redux';\n\nimport crops from './features/crops';\nimport sourceImage from './features/sourceImage';\n\nconst rootReducer = combineReducers({\n  crops,\n  sourceImage,\n});\n\nexport default rootReducer;\n\n// useSelector を型付けする\ndeclare module 'react-redux' {\n  interface DefaultRootState extends ReturnType<typeof rootReducer> {}\n}\n","import classnames from 'classnames';\nimport React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport styles from './CropList.module.css';\nimport { Icon } from 'antd';\nimport { deleteCrop } from '../features/crops';\n\ninterface Props {\n  readonly className?: string;\n}\n\nconst CropList: React.FC<Props> = ({ className }) => {\n  const crops = useSelector(state => state.crops);\n\n  const dispatch = useDispatch();\n  const onDeleteIconClick = useCallback(\n    (index: number) => () => {\n      dispatch(deleteCrop(index));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div className={classnames(className, styles.CropList)}>\n      {crops.map((crop, i) => (\n        <div key={i} className={styles.Crop}>\n          <img className={styles.Thumbnail} src={crop.thumbnail} alt=\"\" />\n          <Icon\n            className={styles.DeleteIcon}\n            type=\"delete\"\n            onClick={onDeleteIconClick(i)}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CropList;\n","import { Slider } from 'antd';\nimport { SliderValue } from 'antd/lib/slider';\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setAngle } from '../features/sourceImage';\n\nimport styles from './AngleSlider.module.css';\n\nconst formatter = (angle: number) => `${angle.toFixed(1)}°`;\n\nconst AngleSlider: React.FC = () => {\n  const hasImage = useSelector(state => Boolean(state.sourceImage.url));\n\n  const dispatch = useDispatch();\n  const onChange = useCallback(\n    (value: SliderValue) => {\n      if (typeof value === 'number') {\n        dispatch(setAngle(value));\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <Slider\n      className={styles.AngleSlider}\n      disabled={!hasImage}\n      min={-10}\n      max={10}\n      step={0.1}\n      defaultValue={0}\n      onChange={onChange}\n      tipFormatter={formatter}\n      tooltipPlacement=\"bottom\"\n    />\n  );\n};\n\nexport default AngleSlider;\n","import { Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { basename, download } from '../utils';\n\nconst DownloadButton = () => {\n  const crops = useSelector(state => state.crops);\n  const sourceImageFileName = useSelector(state => state.sourceImage.fileName);\n\n  const onClick = useCallback(() => {\n    const json = JSON.stringify(\n      crops.map(c => c.params),\n      null,\n      2,\n    );\n    const fileName = `${basename(sourceImageFileName!)}.json`;\n    download(new File([json], fileName, { type: 'application/json' }));\n  }, [crops, sourceImageFileName]);\n\n  return (\n    <Button\n      disabled={!crops.length}\n      type=\"primary\"\n      icon=\"download\"\n      onClick={onClick}\n    >\n      切り抜きデータをダウンロード\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n","export const basename = (s: string): string => s.substr(0, s.lastIndexOf('.'));\n\nexport const download = (file: File): void => {\n  const blobURL = URL.createObjectURL(file);\n\n  const link = document.createElement('a');\n  link.href = blobURL;\n  link.download = file.name;\n  link.click();\n\n  URL.revokeObjectURL(blobURL);\n};\n","import React from 'react';\n\nimport CropList from './CropList';\nimport AngleSlider from './AngleSlider';\nimport DownloadButton from './DownloadButton';\nimport styles from './Sidebar.module.css';\n\nexport const previewClassName = styles.Preview;\n\nconst Sidebar = () => {\n  return (\n    <div className={styles.Sidebar}>\n      <AngleSlider />\n      {/* プレビュー領域の高さを固定するためにはラッパーが必要 */}\n      <div className={styles.PreviewWrapper}>\n        <div className={styles.Preview} />\n      </div>\n      <CropList className={styles.CropList} />\n      <DownloadButton />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\nimport styles from './Canvas.module.css';\n\ninterface Props {\n  readonly cropperRef: React.MutableRefObject<Cropper | null>;\n  readonly previewClassName: string;\n}\n\nconst Canvas = ({ cropperRef, previewClassName }: Props) => {\n  const sourceImage = useSelector(state => state.sourceImage);\n\n  useEffect(() => {\n    if (cropperRef.current) {\n      cropperRef.current.rotateTo(sourceImage.angle);\n    }\n  }, [cropperRef, sourceImage.angle]);\n\n  return (\n    <>\n      <Cropper\n        className={styles.Cropper}\n        ref={c => {\n          cropperRef.current = c;\n        }}\n        src={sourceImage.url ?? undefined}\n        // Cropper.js options\n        autoCropArea={0.2}\n        preview={`.${previewClassName}`}\n        dragMode=\"move\"\n        toggleDragModeOnDblclick={false}\n      />\n    </>\n  );\n};\n\nexport default Canvas;\n","import { Icon, Modal } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { clearCrops } from '../features/crops';\nimport { close } from '../features/sourceImage';\n\nimport styles from './FileName.module.css';\n\nconst { confirm } = Modal;\n\nconst FileName = () => {\n  const dispatch = useDispatch();\n  const sourceImage = useSelector(state => state.sourceImage);\n\n  const closeSourceImage = useCallback(() => {\n    if (!sourceImage.url) return;\n    URL.revokeObjectURL(sourceImage.url);\n    dispatch(close());\n    dispatch(clearCrops());\n  }, [dispatch, sourceImage.url]);\n\n  const hasCrop = useSelector(state => state.crops.length > 0);\n  const onClick = useCallback(\n    () =>\n      hasCrop\n        ? confirm({\n            title: '画像を閉じてもよろしいですか？',\n            content: '切り抜きデータは破棄されます。',\n            okType: 'danger',\n            onOk: closeSourceImage,\n            okText: 'OK',\n            cancelText: 'キャンセル',\n            centered: true,\n          })\n        : closeSourceImage(),\n    [closeSourceImage, hasCrop],\n  );\n\n  return (\n    <div className={styles.FileName} onClick={onClick}>\n      {sourceImage.fileName}\n      <Icon className={styles.CloseIcon} type=\"close-circle\" />\n    </div>\n  );\n};\n\nexport default FileName;\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { open } from '../features/sourceImage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Empty, Icon } from 'antd';\n\nimport styles from './Dropzone.module.css';\n\nconst Dropzone = () => {\n  const hasImage = useSelector(state => Boolean(state.sourceImage.url));\n\n  const dispatch = useDispatch();\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: ['image/jpeg', 'image/png'],\n    noClick: hasImage,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      const file = acceptedFiles[0];\n      if (!acceptedFiles) return;\n      const blobURL = URL.createObjectURL(file);\n      dispatch(open({ fileName: file.name, url: blobURL }));\n    },\n  });\n\n  return (\n    <div className={styles.Root} {...getRootProps()}>\n      <input {...getInputProps()} />\n      <Empty\n        className={styles.Empty}\n        image={<Icon type=\"file-image\" className={styles.Icon} />}\n        description=\"ここをクリック or ドロップして画像を開く\"\n      />\n    </div>\n  );\n};\n\nexport default Dropzone;\n","import { Layout } from 'antd';\nimport React, { useRef } from 'react';\nimport Cropper from 'react-cropper';\nimport { useSelector } from 'react-redux';\n\nimport { useEnterToCrop } from '../hooks';\nimport Sidebar, { previewClassName } from './Sidebar';\nimport Canvas from './Canvas';\nimport FileName from './FileName';\nimport Dropzone from './Dropzone';\nimport styles from './App.module.css';\n\nconst { Content, Sider } = Layout;\n\nconst App = () => {\n  const cropperRef = useRef<Cropper | null>(null);\n  useEnterToCrop(cropperRef);\n\n  const hasImage = useSelector(state => Boolean(state.sourceImage.url));\n\n  return (\n    <Layout>\n      <Content className={styles.Content}>\n        {hasImage ? (\n          <>\n            <Canvas\n              cropperRef={cropperRef}\n              previewClassName={previewClassName}\n            />\n            <FileName />\n          </>\n        ) : (\n          <Dropzone />\n        )}\n      </Content>\n      <Sider width={320} className={styles.Sider} theme=\"light\">\n        <Sidebar></Sidebar>\n      </Sider>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addCrop } from './features/crops';\n\nexport const useEnterToCrop = (\n  cropperRef: React.MutableRefObject<Cropper | null>,\n): void => {\n  const dispatch = useDispatch();\n  const handler = useCallback(\n    async (event: KeyboardEvent) => {\n      const cropper = cropperRef.current;\n      if (cropper && event.key === 'Enter') {\n        const { x, y, width, height, rotate } = cropper.getData();\n        const canvas = cropper.getCroppedCanvas({\n          // サムネイルで表示する領域の数倍のサイズにしておかないと、画質が落ちてしまう\n          width: 300,\n          height: 300,\n        });\n        const blob = await new Promise(resolve =>\n          canvas.toBlob(resolve, 'image/jpeg', 0.7),\n        );\n        dispatch(\n          addCrop({\n            params: { x, y, width, height, rotate },\n            thumbnail: URL.createObjectURL(blob),\n          }),\n        );\n      }\n    },\n    [cropperRef, dispatch],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handler);\n    return () => window.removeEventListener('keydown', handler);\n  }, [handler]);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport reducer from './redux';\nimport App from './components/App';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nconst store = configureStore({\n  reducer,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__c0TTh\",\"PreviewWrapper\":\"Sidebar_PreviewWrapper__3yT_p\",\"Preview\":\"Sidebar_Preview__3edd7\",\"CropList\":\"Sidebar_CropList__2dT_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CropList\":\"CropList_CropList__HvDYP\",\"Crop\":\"CropList_Crop__2OCZE\",\"Thumbnail\":\"CropList_Thumbnail__3bha8\",\"DeleteIcon\":\"CropList_DeleteIcon__1tKMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Dropzone_Root__oZIIO\",\"Empty\":\"Dropzone_Empty__kL6cb\",\"Icon\":\"Dropzone_Icon__qVqCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FileName\":\"FileName_FileName__3JfId\",\"CloseIcon\":\"FileName_CloseIcon__zCSps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"App_Content__3vRik\",\"Sider\":\"App_Sider__3tFNd\"};"],"sourceRoot":""}