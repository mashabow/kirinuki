{"version":3,"sources":["components/Canvas.module.css","components/App.module.css","features/sourceImage.ts","redux.ts","components/Sidebar.tsx","components/Canvas.tsx","components/Dropzone.tsx","components/App.tsx","index.tsx","components/Sidebar.module.css","components/Dropzone.module.css"],"names":["module","exports","slice","createSlice","name","initialState","url","angle","reducers","setURL","state","action","payload","setAngle","actions","rootReducer","combineReducers","sourceImage","previewClassName","styles","Preview","angleFormatter","toFixed","Sidebar","dispatch","useDispatch","onAngleChange","useCallback","value","className","PreviewWrapper","min","max","step","defaultValue","onChange","tipFormatter","tooltipPlacement","Canvas","src","useSelector","undefined","cropper","useRef","useEffect","current","rotateTo","Cropper","ref","c","preview","dragMode","toggleDragModeOnDblclick","Dropzone","children","hasImage","Boolean","useDropzone","accept","noClick","noKeyboard","onDrop","acceptedFiles","length","blobURL","URL","createObjectURL","getRootProps","getInputProps","Root","Empty","image","type","Icon","description","Content","Layout","Sider","App","width","theme","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,0B,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,qB,gKCSpBC,EAAQC,YAAY,CACxBC,KAAM,cACNC,aAPE,CACFC,IAAK,KACLC,MAAO,GAMPC,SAAU,CACRC,OAAQ,SAACC,EAAOC,GACdD,EAAMJ,IAAMK,EAAOC,SAErBC,SAAU,SAACH,EAAOC,GAChBD,EAAMH,MAAQI,EAAOC,YAKZV,IAAf,Q,EACoCA,EAAMY,QAA3BL,E,EAAAA,OAAQI,E,EAAAA,SChBRE,EAJKC,0BAAgB,CAClCC,gB,mCCGWC,EAAmBC,IAAOC,QAEjCC,EAAiB,SAACd,GAAD,gBAAsBA,EAAMe,QAAQ,GAApC,SAgCRC,EA9BC,WACd,IAAMC,EAAWC,cACXC,EAAgBC,uBACpB,SAACC,GACsB,kBAAVA,GACTJ,EAASX,EAASe,MAGtB,CAACJ,IAGH,OACE,oCAEE,yBAAKK,UAAWV,IAAOW,gBACrB,yBAAKD,UAAWV,IAAOC,WAEzB,kBAAC,IAAD,CACEW,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,aAAc,EACdC,SAAUT,EACVU,aAAcf,EACdgB,iBAAiB,a,4CCCVC,EA1BA,SAAC,GAAiC,IAA/BpB,EAA8B,EAA9BA,iBACVqB,EAAMC,aAAY,SAAA9B,GAAK,uBAAIA,EAAMO,YAAYX,WAAtB,aAA6BmC,KAEpDC,EAAUC,iBAAuB,MACjCpC,EAAQiC,aAAY,SAAA9B,GAAK,OAAIA,EAAMO,YAAYV,SAOrD,OANAqC,qBAAU,WACJF,EAAQG,SACVH,EAAQG,QAAQC,SAASvC,KAE1B,CAACA,IAGF,kBAAC,IAAD,CACEsB,UAAWV,IAAO4B,QAClBC,IAAK,SAAAC,GACHP,EAAQG,QAAUI,GAEpBV,IAAKA,EAELW,QAAO,WAAMhC,GACbiC,SAAS,OACTC,0BAA0B,K,4DCWjBC,EA/BE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SACZC,EAAWf,aAAY,SAAA9B,GAAK,OAAI8C,QAAQ9C,EAAMO,YAAYX,QAE1DkB,EAAWC,cAHuB,EAIAgC,YAAY,CAClDC,OAAQ,CAAC,aAAc,aACvBC,QAASJ,EACTK,YAAY,EACZC,OAAQ,SAAAC,GACN,GAA6B,IAAzBA,EAAcC,OAAlB,CACA,IAAMC,EAAUC,IAAIC,gBAAgBJ,EAAc,IAClDtC,EAASf,EAAOuD,QAPZG,EAJgC,EAIhCA,aAAcC,EAJkB,EAIlBA,cAWtB,OACE,uCAAKvC,UAAWV,IAAOkD,MAAUF,KAC/B,0BAAWC,KACVb,EACCD,EAEA,kBAAC,IAAD,CACEzB,UAAWV,IAAOmD,MAClBC,MAAO,kBAAC,IAAD,CAAMC,KAAK,aAAa3C,UAAWV,IAAOsD,OACjDC,YAAY,uHC3BdC,EAAmBC,IAAnBD,QAASE,EAAUD,IAAVC,MAiBFC,EAfH,WACV,OACE,kBAAC,IAAD,KACE,kBAACH,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQzD,iBAAkBA,MAG9B,kBAAC2D,EAAD,CAAOE,MAAO,IAAKlD,UAAWV,IAAO0D,MAAOG,MAAM,SAChD,kBAAC,EAAD,SCVFC,G,cAAQC,YAAe,CAC3BC,aAGFC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,U,mBCjB1BvF,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,2B,mBCA7ED,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,KAAO,0B","file":"static/js/main.1051ebcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cropper\":\"Canvas_Cropper__3Z3Jq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sider\":\"App_Sider__3tFNd\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst initialState: {\n  readonly url: string | null;\n  readonly angle: number;\n} = {\n  url: null,\n  angle: 0,\n};\n\nconst slice = createSlice({\n  name: 'sourceImage',\n  initialState,\n  reducers: {\n    setURL: (state, action: PayloadAction<string>) => {\n      state.url = action.payload;\n    },\n    setAngle: (state, action: PayloadAction<number>) => {\n      state.angle = action.payload;\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const { setURL, setAngle } = slice.actions;\n","import { combineReducers } from 'redux';\n\nimport sourceImage from './features/sourceImage';\n\nconst rootReducer = combineReducers({\n  sourceImage,\n});\n\nexport default rootReducer;\n\n// useSelector を型付けする\ndeclare module 'react-redux' {\n  interface DefaultRootState extends ReturnType<typeof rootReducer> {}\n}\n","import { Slider } from 'antd';\nimport { SliderValue } from 'antd/lib/slider';\nimport React, { useCallback } from 'react';\n\nimport styles from './Sidebar.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setAngle } from '../features/sourceImage';\n\nexport const previewClassName = styles.Preview;\n\nconst angleFormatter = (angle: number) => `${angle.toFixed(1)}°`;\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n  const onAngleChange = useCallback(\n    (value: SliderValue) => {\n      if (typeof value === 'number') {\n        dispatch(setAngle(value));\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      {/* プレビュー領域の高さを固定するためにはラッパーが必要 */}\n      <div className={styles.PreviewWrapper}>\n        <div className={styles.Preview} />\n      </div>\n      <Slider\n        min={-10}\n        max={10}\n        step={0.1}\n        defaultValue={0}\n        onChange={onAngleChange}\n        tipFormatter={angleFormatter}\n        tooltipPlacement=\"bottom\"\n      />\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\nimport styles from './Canvas.module.css';\n\ninterface Props {\n  readonly previewClassName: string;\n}\n\nconst Canvas = ({ previewClassName }: Props) => {\n  const src = useSelector(state => state.sourceImage.url ?? undefined);\n\n  const cropper = useRef<Cropper | null>(null);\n  const angle = useSelector(state => state.sourceImage.angle);\n  useEffect(() => {\n    if (cropper.current) {\n      cropper.current.rotateTo(angle);\n    }\n  }, [angle]);\n\n  return (\n    <Cropper\n      className={styles.Cropper}\n      ref={c => {\n        cropper.current = c;\n      }}\n      src={src}\n      // Cropper.js options\n      preview={`.${previewClassName}`}\n      dragMode=\"move\"\n      toggleDragModeOnDblclick={false}\n    />\n  );\n};\n\nexport default Canvas;\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { setURL } from '../features/sourceImage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Empty, Icon } from 'antd';\n\nimport styles from './Dropzone.module.css';\n\ninterface Props {\n  readonly children: React.ReactElement;\n}\n\nconst Dropzone = ({ children }: Props) => {\n  const hasImage = useSelector(state => Boolean(state.sourceImage.url));\n\n  const dispatch = useDispatch();\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: ['image/jpeg', 'image/png'],\n    noClick: hasImage,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length === 0) return;\n      const blobURL = URL.createObjectURL(acceptedFiles[0]);\n      dispatch(setURL(blobURL));\n    },\n  });\n\n  return (\n    <div className={styles.Root} {...getRootProps()}>\n      <input {...getInputProps()} />\n      {hasImage ? (\n        children\n      ) : (\n        <Empty\n          className={styles.Empty}\n          image={<Icon type=\"file-image\" className={styles.Icon} />}\n          description=\"ここをクリック or ドロップして画像を開く\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dropzone;\n","import { Layout } from 'antd';\nimport React from 'react';\n\nimport Sidebar, { previewClassName } from './Sidebar';\nimport Canvas from './Canvas';\n\nimport styles from './App.module.css';\nimport Dropzone from './Dropzone';\n\nconst { Content, Sider } = Layout;\n\nconst App = () => {\n  return (\n    <Layout>\n      <Content>\n        <Dropzone>\n          <Canvas previewClassName={previewClassName} />\n        </Dropzone>\n      </Content>\n      <Sider width={300} className={styles.Sider} theme=\"light\">\n        <Sidebar></Sidebar>\n      </Sider>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport reducer from './redux';\nimport App from './components/App';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nconst store = configureStore({\n  reducer,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PreviewWrapper\":\"Sidebar_PreviewWrapper__3yT_p\",\"Preview\":\"Sidebar_Preview__3edd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Dropzone_Root__oZIIO\",\"Empty\":\"Dropzone_Empty__kL6cb\",\"Icon\":\"Dropzone_Icon__qVqCp\"};"],"sourceRoot":""}