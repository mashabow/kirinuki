{"version":3,"sources":["components/AngleSlider.module.css","components/Canvas.module.css","features/crops.ts","features/sourceImage.ts","redux.ts","components/CropList.tsx","components/AngleSlider.tsx","components/DownloadButton.tsx","utils.ts","components/Sidebar.tsx","components/Canvas.tsx","components/FileName.tsx","components/Dropzone.tsx","components/App.tsx","hooks.ts","index.tsx","components/CropList.module.css","components/Sidebar.module.css","components/Dropzone.module.css","components/FileName.module.css","components/App.module.css"],"names":["module","exports","initialState","slice","createSlice","name","reducers","addCrop","state","action","push","payload","deleteCrop","splice","clearCrops","actions","fileName","url","angle","open","_","close","setAngle","rootReducer","combineReducers","crops","sourceImage","thumbnailPreviewClassName","styles","ThumbnailPreview","CropList","className","useSelector","dispatch","useDispatch","onDeleteIconClick","useCallback","index","src","undefined","classnames","map","crop","i","key","Crop","Thumbnail","style","divStyle","alt","imgStyle","DeleteIcon","type","onClick","CropPreview","formatter","toFixed","AngleSlider","hasImage","Boolean","onChange","value","disabled","min","max","step","defaultValue","tipFormatter","tooltipPlacement","DownloadButton","sourceImageFileName","s","json","JSON","stringify","c","params","substr","lastIndexOf","file","blobURL","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","File","length","icon","previewClassName","Preview","Sidebar","PreviewWrapper","Canvas","cropperRef","previews","useEffect","current","rotateTo","Cropper","ref","autoCropArea","preview","join","dragMode","toggleDragModeOnDblclick","confirm","Modal","FileName","closeSourceImage","hasCrop","title","content","okType","onOk","okText","cancelText","centered","CloseIcon","Dropzone","useDropzone","accept","noClick","noKeyboard","onDrop","acceptedFiles","getRootProps","getInputProps","Root","Empty","image","Icon","description","Content","Layout","Sider","App","useRef","handler","event","cropper","getData","x","y","width","height","rotate","querySelector","transform","window","addEventListener","removeEventListener","useEnterToCrop","theme","store","configureStore","reducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.241788c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AngleSlider\":\"AngleSlider_AngleSlider__2SJUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cropper\":\"Canvas_Cropper__3Z3Jq\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// 各プロパティの意味は以下の図を参照\n// https://github.com/fengyuanchen/cropperjs/blob/v1.5.6/docs/images/data.jpg\ninterface CropParams {\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  readonly rotate: number;\n}\n\ninterface Crop {\n  readonly params: CropParams;\n  readonly divStyle: {\n    readonly width: string;\n    readonly height: string;\n  };\n  readonly imgStyle: {\n    readonly width: string;\n    readonly height: string;\n    readonly transform: string;\n  };\n}\n\nconst initialState: readonly Crop[] = [];\n\nconst slice = createSlice({\n  name: 'crops',\n  initialState,\n  reducers: {\n    addCrop: (state, action: PayloadAction<Crop>) => {\n      state.push(action.payload);\n    },\n    deleteCrop: (state, action: PayloadAction<number>) => {\n      state.splice(action.payload, 1);\n    },\n    clearCrops: () => initialState,\n  },\n});\n\nexport default slice.reducer;\nexport const { addCrop, deleteCrop, clearCrops } = slice.actions;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface State {\n  readonly fileName: string | null;\n  readonly url: string | null;\n  readonly angle: number;\n}\n\nconst initialState: State = {\n  fileName: null,\n  url: null,\n  angle: 0,\n};\n\nconst slice = createSlice({\n  name: 'sourceImage',\n  initialState,\n  reducers: {\n    open: (_, action: PayloadAction<Pick<State, 'fileName' | 'url'>>) => ({\n      ...action.payload,\n      angle: initialState.angle,\n    }),\n    close: () => initialState,\n    setAngle: (state, action: PayloadAction<number>) => {\n      state.angle = action.payload;\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const { open, close, setAngle } = slice.actions;\n","import { combineReducers } from 'redux';\n\nimport crops from './features/crops';\nimport sourceImage from './features/sourceImage';\n\nconst rootReducer = combineReducers({\n  crops,\n  sourceImage,\n});\n\nexport default rootReducer;\n\n// useSelector を型付けする\ndeclare module 'react-redux' {\n  interface DefaultRootState extends ReturnType<typeof rootReducer> {}\n}\n","import { Icon } from 'antd';\nimport classnames from 'classnames';\nimport React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteCrop } from '../features/crops';\nimport styles from './CropList.module.css';\n\nexport const thumbnailPreviewClassName = styles.ThumbnailPreview;\n\ninterface Props {\n  readonly className?: string;\n}\n\nconst CropList: React.FC<Props> = ({ className }) => {\n  const crops = useSelector(state => state.crops);\n\n  const dispatch = useDispatch();\n  const onDeleteIconClick = useCallback(\n    (index: number) => () => {\n      dispatch(deleteCrop(index));\n    },\n    [dispatch],\n  );\n\n  const src = useSelector(state => state.sourceImage.url ?? undefined);\n\n  return (\n    <div className={classnames(className, styles.CropList)}>\n      {crops.map((crop, i) => (\n        <div key={i} className={styles.Crop}>\n          <div className={styles.Thumbnail} style={crop.divStyle}>\n            <img src={src} alt={`切り抜き ${i + 1}`} style={crop.imgStyle} />\n          </div>\n          <Icon\n            className={styles.DeleteIcon}\n            type=\"delete\"\n            onClick={onDeleteIconClick(i)}\n          />\n        </div>\n      ))}\n      {/* サムネイル表示用スタイルを取得するための、ダミーの要素 */}\n      <div className={classnames(styles.Crop, styles.CropPreview)}>\n        <div\n          className={classnames(styles.Thumbnail, thumbnailPreviewClassName)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CropList;\n","import { Slider } from 'antd';\nimport { SliderValue } from 'antd/lib/slider';\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setAngle } from '../features/sourceImage';\n\nimport styles from './AngleSlider.module.css';\n\nconst formatter = (angle: number) => `${angle.toFixed(1)}°`;\n\nconst AngleSlider: React.FC = () => {\n  const hasImage = useSelector(state => Boolean(state.sourceImage.url));\n\n  const dispatch = useDispatch();\n  const onChange = useCallback(\n    (value: SliderValue) => {\n      if (typeof value === 'number') {\n        dispatch(setAngle(value));\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <Slider\n      className={styles.AngleSlider}\n      disabled={!hasImage}\n      min={-10}\n      max={10}\n      step={0.1}\n      defaultValue={0}\n      onChange={onChange}\n      tipFormatter={formatter}\n      tooltipPlacement=\"bottom\"\n    />\n  );\n};\n\nexport default AngleSlider;\n","import { Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { basename, download } from '../utils';\n\nconst DownloadButton = () => {\n  const crops = useSelector(state => state.crops);\n  const sourceImageFileName = useSelector(state => state.sourceImage.fileName);\n\n  const onClick = useCallback(() => {\n    const json = JSON.stringify(\n      crops.map(c => c.params),\n      null,\n      2,\n    );\n    const fileName = `${basename(sourceImageFileName!)}.json`;\n    download(new File([json], fileName, { type: 'application/json' }));\n  }, [crops, sourceImageFileName]);\n\n  return (\n    <Button\n      disabled={!crops.length}\n      type=\"primary\"\n      icon=\"download\"\n      onClick={onClick}\n    >\n      切り抜きデータをダウンロード\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n","export const basename = (s: string): string => s.substr(0, s.lastIndexOf('.'));\n\nexport const download = (file: File): void => {\n  const blobURL = URL.createObjectURL(file);\n\n  const link = document.createElement('a');\n  link.href = blobURL;\n  link.download = file.name;\n  link.click();\n\n  URL.revokeObjectURL(blobURL);\n};\n","import React from 'react';\n\nimport CropList from './CropList';\nimport AngleSlider from './AngleSlider';\nimport DownloadButton from './DownloadButton';\nimport styles from './Sidebar.module.css';\n\nexport const previewClassName = styles.Preview;\n\nconst Sidebar = () => {\n  return (\n    <div className={styles.Sidebar}>\n      <AngleSlider />\n      {/* プレビュー領域の高さを固定するためにはラッパーが必要 */}\n      <div className={styles.PreviewWrapper}>\n        <div className={styles.Preview} />\n      </div>\n      <CropList className={styles.CropList} />\n      <DownloadButton />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\nimport styles from './Canvas.module.css';\n\ninterface Props {\n  readonly cropperRef: React.MutableRefObject<Cropper | null>;\n  readonly previews: readonly string[];\n}\n\nconst Canvas = ({ cropperRef, previews }: Props) => {\n  const sourceImage = useSelector(state => state.sourceImage);\n\n  useEffect(() => {\n    if (cropperRef.current) {\n      cropperRef.current.rotateTo(sourceImage.angle);\n    }\n  }, [cropperRef, sourceImage.angle]);\n\n  return (\n    <Cropper\n      className={styles.Cropper}\n      ref={c => {\n        cropperRef.current = c;\n      }}\n      src={sourceImage.url ?? undefined}\n      // Cropper.js options\n      autoCropArea={0.2}\n      preview={previews.map(s => `.${s}`).join(', ')}\n      dragMode=\"move\"\n      toggleDragModeOnDblclick={false}\n    />\n  );\n};\n\nexport default Canvas;\n","import { Icon, Modal } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { clearCrops } from '../features/crops';\nimport { close } from '../features/sourceImage';\n\nimport styles from './FileName.module.css';\n\nconst { confirm } = Modal;\n\nconst FileName = () => {\n  const dispatch = useDispatch();\n  const sourceImage = useSelector(state => state.sourceImage);\n\n  const closeSourceImage = useCallback(() => {\n    if (!sourceImage.url) return;\n    URL.revokeObjectURL(sourceImage.url);\n    dispatch(close());\n    dispatch(clearCrops());\n  }, [dispatch, sourceImage.url]);\n\n  const hasCrop = useSelector(state => state.crops.length > 0);\n  const onClick = useCallback(\n    () =>\n      hasCrop\n        ? confirm({\n            title: '画像を閉じてもよろしいですか？',\n            content: '切り抜きデータは破棄されます。',\n            okType: 'danger',\n            onOk: closeSourceImage,\n            okText: 'OK',\n            cancelText: 'キャンセル',\n            centered: true,\n          })\n        : closeSourceImage(),\n    [closeSourceImage, hasCrop],\n  );\n\n  return (\n    <div className={styles.FileName} onClick={onClick}>\n      {sourceImage.fileName}\n      <Icon className={styles.CloseIcon} type=\"close-circle\" />\n    </div>\n  );\n};\n\nexport default FileName;\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { open } from '../features/sourceImage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Empty, Icon } from 'antd';\n\nimport styles from './Dropzone.module.css';\n\nconst Dropzone = () => {\n  const hasImage = useSelector(state => Boolean(state.sourceImage.url));\n\n  const dispatch = useDispatch();\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: ['image/jpeg', 'image/png'],\n    noClick: hasImage,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      const file = acceptedFiles[0];\n      if (!acceptedFiles) return;\n      const blobURL = URL.createObjectURL(file);\n      dispatch(open({ fileName: file.name, url: blobURL }));\n    },\n  });\n\n  return (\n    <div className={styles.Root} {...getRootProps()}>\n      <input {...getInputProps()} />\n      <Empty\n        className={styles.Empty}\n        image={<Icon type=\"file-image\" className={styles.Icon} />}\n        description=\"ここをクリック or ドロップして画像を開く\"\n      />\n    </div>\n  );\n};\n\nexport default Dropzone;\n","import { Layout } from 'antd';\nimport React, { useRef } from 'react';\nimport Cropper from 'react-cropper';\nimport { useSelector } from 'react-redux';\n\nimport { useEnterToCrop } from '../hooks';\nimport Sidebar, { previewClassName } from './Sidebar';\nimport { thumbnailPreviewClassName } from './CropList';\nimport Canvas from './Canvas';\nimport FileName from './FileName';\nimport Dropzone from './Dropzone';\nimport styles from './App.module.css';\n\nconst { Content, Sider } = Layout;\n\nconst App = () => {\n  const cropperRef = useRef<Cropper | null>(null);\n  useEnterToCrop(cropperRef, thumbnailPreviewClassName);\n\n  const hasImage = useSelector(state => Boolean(state.sourceImage.url));\n\n  return (\n    <Layout>\n      <Content className={styles.Content}>\n        {hasImage ? (\n          <>\n            <Canvas\n              cropperRef={cropperRef}\n              previews={[previewClassName, thumbnailPreviewClassName]}\n            />\n            <FileName />\n          </>\n        ) : (\n          <Dropzone />\n        )}\n      </Content>\n      <Sider width={320} className={styles.Sider} theme=\"light\">\n        <Sidebar></Sidebar>\n      </Sider>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addCrop } from './features/crops';\n\nexport const useEnterToCrop = (\n  cropperRef: React.MutableRefObject<Cropper | null>,\n  thumbnailPreviewClassName: string,\n): void => {\n  const dispatch = useDispatch();\n  const handler = useCallback(\n    (event: KeyboardEvent) => {\n      const cropper = cropperRef.current;\n      if (!(cropper && event.key === 'Enter')) return;\n      const { x, y, width, height, rotate } = cropper.getData();\n\n      // 本来であれば cropper.getCropedCanvas() で画像データを直に取得したいところだが、\n      // soruceImage のサイズが大きすぎると、NS_ERROR_FAILURE というエラーが出るなどして、\n      // 取得に失敗することがある。\n      // そこで、サムネイルと同じ大きさのダミーのプレビュー thumbnailPreviewClassName を用意して、\n      // crop 時にそのスタイルを取得し、サムネイル表示に利用するようにする。\n      const divStyle = document.querySelector<HTMLDivElement>(\n        `.${thumbnailPreviewClassName}`,\n      )!.style;\n      const imgStyle = document.querySelector<HTMLImageElement>(\n        `.${thumbnailPreviewClassName}>img`,\n      )!.style;\n\n      dispatch(\n        addCrop({\n          params: { x, y, width, height, rotate },\n          divStyle: {\n            width: divStyle.width,\n            height: divStyle.height,\n          },\n          imgStyle: {\n            width: imgStyle.width,\n            height: imgStyle.height,\n            transform: imgStyle.transform,\n          },\n        }),\n      );\n    },\n    [cropperRef, dispatch, thumbnailPreviewClassName],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handler);\n    return () => window.removeEventListener('keydown', handler);\n  }, [handler]);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport reducer from './redux';\nimport App from './components/App';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nconst store = configureStore({\n  reducer,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CropList\":\"CropList_CropList__HvDYP\",\"Crop\":\"CropList_Crop__2OCZE\",\"CropPreview\":\"CropList_CropPreview__20KHl\",\"Thumbnail\":\"CropList_Thumbnail__3bha8\",\"ThumbnailPreview\":\"CropList_ThumbnailPreview__zBLOz\",\"DeleteIcon\":\"CropList_DeleteIcon__1tKMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__c0TTh\",\"PreviewWrapper\":\"Sidebar_PreviewWrapper__3yT_p\",\"Preview\":\"Sidebar_Preview__3edd7\",\"CropList\":\"Sidebar_CropList__2dT_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Dropzone_Root__oZIIO\",\"Empty\":\"Dropzone_Empty__kL6cb\",\"Icon\":\"Dropzone_Icon__qVqCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FileName\":\"FileName_FileName__3JfId\",\"CloseIcon\":\"FileName_CloseIcon__zCSps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"App_Content__3vRik\",\"Sider\":\"App_Sider__3tFNd\"};"],"sourceRoot":""}