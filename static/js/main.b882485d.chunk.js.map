{"version":3,"sources":["components/Canvas.module.css","components/App.module.css","features/crops.ts","features/sourceImage.ts","redux.ts","components/CropList.tsx","components/Sidebar.tsx","components/Canvas.tsx","components/Dropzone.tsx","components/App.tsx","hooks.ts","index.tsx","components/Sidebar.module.css","components/CropList.module.css","components/Dropzone.module.css"],"names":["module","exports","slice","createSlice","name","initialState","reducers","addCrop","state","action","push","payload","deleteCrop","splice","actions","url","angle","setURL","setAngle","rootReducer","combineReducers","crops","sourceImage","CropList","className","useSelector","dispatch","useDispatch","onDeleteIconClick","useCallback","index","classnames","styles","map","crop","i","key","Crop","Thumbnail","src","thumbnail","alt","DeleteIcon","type","onClick","previewClassName","Preview","angleFormatter","toFixed","Sidebar","onAngleChange","value","min","max","step","defaultValue","onChange","tipFormatter","tooltipPlacement","PreviewWrapper","Canvas","cropperRef","undefined","useEffect","current","rotateTo","Cropper","ref","c","autoCropArea","preview","dragMode","toggleDragModeOnDblclick","Dropzone","children","hasImage","Boolean","useDropzone","accept","noClick","noKeyboard","onDrop","acceptedFiles","length","blobURL","URL","createObjectURL","getRootProps","getInputProps","Root","Empty","image","Icon","description","Content","Layout","Sider","App","useRef","handler","event","a","cropper","getData","x","y","width","height","rotate","canvas","getCroppedCanvas","Promise","resolve","toBlob","blob","params","window","addEventListener","removeEventListener","useEnterToCrop","theme","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b882485d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cropper\":\"Canvas_Cropper__3Z3Jq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sider\":\"App_Sider__3tFNd\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// 各プロパティの意味は以下の図を参照\n// https://github.com/fengyuanchen/cropperjs/blob/v1.5.6/docs/images/data.jpg\ninterface CropParams {\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  readonly rotate: number;\n}\n\ninterface Crop {\n  readonly params: CropParams;\n  readonly thumbnail: string;\n}\n\nconst initialState: readonly Crop[] = [];\n\nconst slice = createSlice({\n  name: 'crops',\n  initialState,\n  reducers: {\n    addCrop: (state, action: PayloadAction<Crop>) => {\n      state.push(action.payload);\n    },\n    deleteCrop: (state, action: PayloadAction<number>) => {\n      state.splice(action.payload, 1);\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const { addCrop, deleteCrop } = slice.actions;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst initialState: {\n  readonly url: string | null;\n  readonly angle: number;\n} = {\n  url: null,\n  angle: 0,\n};\n\nconst slice = createSlice({\n  name: 'sourceImage',\n  initialState,\n  reducers: {\n    setURL: (state, action: PayloadAction<string>) => {\n      state.url = action.payload;\n    },\n    setAngle: (state, action: PayloadAction<number>) => {\n      state.angle = action.payload;\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const { setURL, setAngle } = slice.actions;\n","import { combineReducers } from 'redux';\n\nimport crops from './features/crops';\nimport sourceImage from './features/sourceImage';\n\nconst rootReducer = combineReducers({\n  crops,\n  sourceImage,\n});\n\nexport default rootReducer;\n\n// useSelector を型付けする\ndeclare module 'react-redux' {\n  interface DefaultRootState extends ReturnType<typeof rootReducer> {}\n}\n","import classnames from 'classnames';\nimport React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport styles from './CropList.module.css';\nimport { Icon } from 'antd';\nimport { deleteCrop } from '../features/crops';\n\ninterface Props {\n  readonly className?: string;\n}\n\nconst CropList: React.FC<Props> = ({ className }) => {\n  const crops = useSelector(state => state.crops);\n\n  const dispatch = useDispatch();\n  const onDeleteIconClick = useCallback(\n    (index: number) => () => {\n      dispatch(deleteCrop(index));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div className={classnames(className, styles.CropList)}>\n      {crops.map((crop, i) => (\n        <div key={i} className={styles.Crop}>\n          <img className={styles.Thumbnail} src={crop.thumbnail} alt=\"\" />\n          <Icon\n            className={styles.DeleteIcon}\n            type=\"delete\"\n            onClick={onDeleteIconClick(i)}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CropList;\n","import { Slider } from 'antd';\nimport { SliderValue } from 'antd/lib/slider';\nimport React, { useCallback } from 'react';\n\nimport styles from './Sidebar.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setAngle } from '../features/sourceImage';\nimport CropList from './CropList';\n\nexport const previewClassName = styles.Preview;\n\nconst angleFormatter = (angle: number) => `${angle.toFixed(1)}°`;\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n  const onAngleChange = useCallback(\n    (value: SliderValue) => {\n      if (typeof value === 'number') {\n        dispatch(setAngle(value));\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <div className={styles.Sidebar}>\n      <Slider\n        min={-10}\n        max={10}\n        step={0.1}\n        defaultValue={0}\n        onChange={onAngleChange}\n        tipFormatter={angleFormatter}\n        tooltipPlacement=\"bottom\"\n      />\n      {/* プレビュー領域の高さを固定するためにはラッパーが必要 */}\n      <div className={styles.PreviewWrapper}>\n        <div className={styles.Preview} />\n      </div>\n      <CropList className={styles.CropList} />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\nimport styles from './Canvas.module.css';\n\ninterface Props {\n  readonly cropperRef: React.MutableRefObject<Cropper | null>;\n  readonly previewClassName: string;\n}\n\nconst Canvas = ({ cropperRef, previewClassName }: Props) => {\n  const src = useSelector(state => state.sourceImage.url ?? undefined);\n\n  const dispatch = useDispatch();\n  const angle = useSelector(state => state.sourceImage.angle);\n  useEffect(() => {\n    if (cropperRef.current) {\n      cropperRef.current.rotateTo(angle);\n    }\n  }, [angle, cropperRef, dispatch]);\n\n  return (\n    <Cropper\n      className={styles.Cropper}\n      ref={c => {\n        cropperRef.current = c;\n      }}\n      src={src}\n      // Cropper.js options\n      autoCropArea={0.2}\n      preview={`.${previewClassName}`}\n      dragMode=\"move\"\n      toggleDragModeOnDblclick={false}\n    />\n  );\n};\n\nexport default Canvas;\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { setURL } from '../features/sourceImage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Empty, Icon } from 'antd';\n\nimport styles from './Dropzone.module.css';\n\ninterface Props {\n  readonly children: React.ReactElement;\n}\n\nconst Dropzone = ({ children }: Props) => {\n  const hasImage = useSelector(state => Boolean(state.sourceImage.url));\n\n  const dispatch = useDispatch();\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: ['image/jpeg', 'image/png'],\n    noClick: hasImage,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length === 0) return;\n      const blobURL = URL.createObjectURL(acceptedFiles[0]);\n      dispatch(setURL(blobURL));\n    },\n  });\n\n  return (\n    <div className={styles.Root} {...getRootProps()}>\n      <input {...getInputProps()} />\n      {hasImage ? (\n        children\n      ) : (\n        <Empty\n          className={styles.Empty}\n          image={<Icon type=\"file-image\" className={styles.Icon} />}\n          description=\"ここをクリック or ドロップして画像を開く\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dropzone;\n","import { Layout } from 'antd';\nimport React, { useRef } from 'react';\nimport Cropper from 'react-cropper';\n\nimport { useEnterToCrop } from '../hooks';\nimport Sidebar, { previewClassName } from './Sidebar';\nimport Canvas from './Canvas';\nimport Dropzone from './Dropzone';\nimport styles from './App.module.css';\n\nconst { Content, Sider } = Layout;\n\nconst App = () => {\n  const cropperRef = useRef<Cropper | null>(null);\n  useEnterToCrop(cropperRef);\n\n  return (\n    <Layout>\n      <Content>\n        <Dropzone>\n          <Canvas cropperRef={cropperRef} previewClassName={previewClassName} />\n        </Dropzone>\n      </Content>\n      <Sider width={320} className={styles.Sider} theme=\"light\">\n        <Sidebar></Sidebar>\n      </Sider>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addCrop } from './features/crops';\n\nexport const useEnterToCrop = (\n  cropperRef: React.MutableRefObject<Cropper | null>,\n): void => {\n  const dispatch = useDispatch();\n  const handler = useCallback(\n    async (event: KeyboardEvent) => {\n      const cropper = cropperRef.current;\n      if (cropper && event.key === 'Enter') {\n        const { x, y, width, height, rotate } = cropper.getData();\n        const canvas = cropper.getCroppedCanvas({\n          // サムネイルで表示する領域の数倍のサイズにしておかないと、画質が落ちてしまう\n          width: 300,\n          height: 300,\n        });\n        const blob = await new Promise(resolve => canvas.toBlob(resolve));\n\n        dispatch(\n          addCrop({\n            params: { x, y, width, height, rotate },\n            thumbnail: URL.createObjectURL(blob),\n          }),\n        );\n      }\n    },\n    [cropperRef, dispatch],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handler);\n    return () => window.removeEventListener('keydown', handler);\n  }, [handler]);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport reducer from './redux';\nimport App from './components/App';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nconst store = configureStore({\n  reducer,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__c0TTh\",\"PreviewWrapper\":\"Sidebar_PreviewWrapper__3yT_p\",\"Preview\":\"Sidebar_Preview__3edd7\",\"CropList\":\"Sidebar_CropList__2dT_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CropList\":\"CropList_CropList__HvDYP\",\"Crop\":\"CropList_Crop__2OCZE\",\"Thumbnail\":\"CropList_Thumbnail__3bha8\",\"DeleteIcon\":\"CropList_DeleteIcon__1tKMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Dropzone_Root__oZIIO\",\"Empty\":\"Dropzone_Empty__kL6cb\",\"Icon\":\"Dropzone_Icon__qVqCp\"};"],"sourceRoot":""}